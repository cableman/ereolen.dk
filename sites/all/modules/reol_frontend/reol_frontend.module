<?php
/**
 * @file
 * Code for the eReolen frontend feature.
 */

include_once 'reol_frontend.features.inc';

/**
 * Implements hook_entity_info_alter().
 */
function reol_frontend_entity_info_alter(&$entity_info) {
  $entity_info['ting_object']['view modes'] += array(
    'review' => array(
      'label' => t('Review'),
      'custom settings' => TRUE,
    ),
  );
}

/**
 * Implements hook_preprocess_node().
 */
function reol_frontend_preprocess_node(&$variables) {
  // Add background image on teaser for article.
  if ($variables['node']->type == 'article' && $variables['view_mode'] == 'teaser') {
    $node_wrapper = entity_metadata_wrapper('node', $variables['node']);

    // Get image info.
    $image_field = $node_wrapper->field_ding_news_list_image->value();
    $image_uri = $image_field['uri'];
    $image_for_sizing = image_style_path('reol_article_teaser_background', $image_uri);
    list($image_w, $image_h) = getimagesize($image_for_sizing);

    // Add image style image.
    $variables['image_background'] = theme('image_style', array(
      'style_name' => 'reol_article_teaser_background',
      'path' => $image_uri,
      'getsize' => TRUE,
      'attributes' => array(
        'width' => $image_w,
        'height' => $image_h,
      ),
    ));

    // Change text for read more link.
    $variables['readmore_text'] = t('Read entire article');
    $variables['readmore'] = url($variables['content']['links']['node']['#links']['node-readmore']['href']);
  }

  elseif ($variables['node']->type == "author_portait") {
    $variables['link'] = $variables['content']['field_link']['#items'][0]['url'];
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function reol_frontend_ctools_plugin_directory($owner, $plugin_type) {
  return 'plugins/' . $plugin_type;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function reol_frontend_form_ding_page_node_form_alter(&$form, &$form_state) {
  $value = variable_get('reol_frontend_quick_guide_nid', 0) == isset($form['#node']->nid) ? $form['#node']->nid : -1;
  $form['options']['quick_guide'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use as quick guide'),
    '#description' => t('Use this page as the quick guide page. If another one has been set earlier, this one takes over.'),
    '#default_value' => $value,
  );

  $form['actions']['submit']['#submit'][] = 'reol_frontend_form_ding_page_node_form_submit';
}

/**
 * Custom submit handler for saving the quick guide nid.
 */
function reol_frontend_form_ding_page_node_form_submit($form, &$form_state) {
  if ($form_state['values']['quick_guide']) {
    variable_set('reol_frontend_quick_guide_nid', $form_state['nid']);
  }
  elseif (variable_get('reol_frontend_quick_guide_nid', 0) == $form_state['nid']) {
    variable_del('reol_frontend_quick_guide_nid');
  }
}

/**
 * Implements hook_views_query_alter().
 */
function reol_frontend_views_query_alter(&$view, &$query) {
  // Make sure we do left joins, as we would miss results that
  // have nothing in field.
  if ($view->name == 'articles' && $view->current_display == "articles_page") {
    $query->table_queue['field_data_field_reol_entity_type']['join']->type = "LEFT";

    // If we are selecting all, remove second group entirely,
    // as we would not get all results if not.
    if ($view->exposed_raw_input['type'] == 'All') {
      unset($view->query->where[2]);
    }
  }
}
