<?php
/**
 * @file
 * Code for the loan module for eReolen.
 */

require_once 'includes/reol_loan.loan.inc';

/**
 * Implements hook_permission().
 */
function reol_loan_permission() {
  return array(
    'perform loan' => array(
      'title' => t('Perform loan'),
      'description' => t('Perform a loan of an audiobook or ebook'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function reol_loan_menu() {
  $items = array();

  $items['ting/object/%ting_object/loan'] = array(
    'page callback' => 'reol_loan_loan_ajax',
    'page arguments' => array(2),
    'delivery callback' => 'ajax_deliver',
    'access arguments' => array('perform loan'),
  );

  return $items;
}

/**
 * Implements hook_secure_permissions().
 *
 * Define which users should be able to perform a loan.
 */
function reol_loan_secure_permissions($role) {
  $permissions = array(
    'provider' => array(
      'perform loan',
    ),
  );

  if (isset($permissions[$role])) {
    return $permissions[$role];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function reol_loan_form_ding_loan_loans_form_alter(&$form, &$form_state) {
  // Move elements out of group. We do not wish to group items.
  foreach ($form['loans'] as $loan_group) {
    $children = element_children($loan_group);
    foreach ($children as $child) {
      if ($child == 'title') {
        continue;
      }
      $form['all_loans'][$child] = $loan_group[$child];

      // Add another information regarding when the loan expires.
      $time = strtotime($form['all_loans'][$child]['#loan']->expiry);
      $form['all_loans'][$child]['#information']['expire_in'] = array(
        'label' => t('Expires in'),
        'data' => format_interval($time - time(), 1),
        'class' => 'expires-in',
        '#weight' => 10,
      );
    }
  }

  // Remove old groups.
  unset($form['loans']);
}
