<?php
/**
 * @file
 * Code for the eReolen base module feature.
 */

/**
 * Get the field form for a field.
 *
 * @param string $type
 *   The entity type to get field for.
 * @param string $bundle
 *   The entity bundle for the entity.
 * @param string $field_name
 *   The name of the field.
 * @param StdClass $entity
 *   The entity to get field for.
 * @param array $form
 *   The form to attach field to.
 * @param array $form_state
 *   The state of the form.
 *
 * @return array
 *   The field form.
 */
function reol_base_get_field_form($type, $bundle, $field_name, $entity, &$form, &$form_state) {
  $field = field_info_field($field_name);
  $instance = field_info_instance($type, $field_name, $bundle);
  $lang_code = field_language($type, $entity, $field_name);
  $items = field_get_items($type, $entity, $field_name);
  return field_default_form($type, $entity, $field, $instance, $lang_code, $items, $form, $form_state);
}

/**
 * Implements hook_entity_load().
 *
 * As our provider uses ISBN-numbers, we wish to have localId be the
 * ISBN-number of the object.
 */
function reol_base_entity_load($entities, $type) {
  // Only act on our own type.
  if ($type != 'ting_object') {
    return;
  }

  foreach ($entities as $entity) {
    if (!($entity instanceof TingEntity)) {
      continue;
    }
    // When have to check all the way down, as chain might be broken
    // somwhere. Only touch localId if we have the right value for it.
    if (isset($entity->reply) &&
      isset($entity->reply->record) &&
      isset($entity->reply->record['dc:identifier']) &&
      isset($entity->reply->record['dc:identifier']['oss:PROVIDER-ID']) &&
      count($entity->reply->record['dc:identifier']['oss:PROVIDER-ID'] == 1)) {
      // We append isbn in front to avoid confusing with entities that already
      // have isbn as localId.
      $entity->localId = "isbn:" . $entity->reply->record['dc:identifier']['oss:PROVIDER-ID'][0];
    }
  }
}
