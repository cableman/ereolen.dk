<?php

/**
 * @file
 * Code for the News carousel feature.
 */

include_once 'reol_news_paragraph.features.inc';

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function reol_news_paragraph_paragraphs_item_view($entity, $view_mode, $langcode) {
  if ($entity->bundle() == 'article_carousel') {
    $count = $entity->wrapper()->field_carousel_count->value();

    // Override the rendering of the count field with the carousel.
    $entity->content['field_carousel_count'] = _reol_news_paragraph_build_carousel($count);
  }
}

/**
 * Return a render array for a article carousel.
 *
 * @param int $count
 *   Number of items in the carousel.
 *
 * @return array
 *   Render array for the carousel.
 */
function _reol_news_paragraph_build_carousel($count) {
  $build = array();
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'article')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->propertyOrderBy('created', 'DESC')
    ->range(0, $count);

  $result = $query->execute();
  if (isset($result['node'])) {
    $articles = entity_load('node', array_keys($result['node']));
    if ($articles) {
      $rendered_nodes = node_view_multiple($articles);
      $items = array();
      foreach (element_children($rendered_nodes['nodes']) as $key) {
        $items[$key] = $rendered_nodes['nodes'][$key];
      }
      $build = array(
        '#type' => 'ding_carousel',
        '#title' => '',
        '#items' => $items,
      );
    }
  }

  return $build;
}
